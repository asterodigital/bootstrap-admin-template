---
import AuthenticationLayout from "../../layouts/admin/authentication-layout.astro";
import { getAssetPrefix, getPathPrefix } from "../../../utils/path.js";
---

<AuthenticationLayout
  title="Password Protected"
  description="This content is password protected"
  currentPath="others/password-protected"
>
  <div
    class="min-vh-100 d-flex flex-column justify-content-center py-4 py-sm-5 bg-light bg-opacity-50"
  >
    <div class="container px-4">
      <div class="row justify-content-center">
        <div class="col-12 col-md-10 col-lg-8 col-xl-7">
          <div class="card rounded-4 overflow-hidden">
            <!-- Top Accent Bar -->
            <div class="bg-primary h-1"></div>

            <div class="card-body p-4 p-lg-5">
              <!-- Store Logo/Branding -->
              <div class="text-center mb-4">
                <h2 class="h3 fw-semibold mb-2">Password Protected</h2>
                <p class="text-body-secondary">
                  This website is password protected. Please enter the password to view it.
                </p>
                <div class="badge bg-info text-white mt-2 p-2">
                  <i class="ri-information-line me-1"></i> Demo Password: <b>demo123</b>
                </div>
              </div>

              <!-- Password Form -->
              <div class="password-form mb-4">
                <form id="passwordForm" class="needs-validation" novalidate>
                  <div class="mb-4">
                    <label for="storePassword" class="form-label">Password</label>
                    <div class="input-group">
                      <input
                        type="password"
                        class="form-control"
                        id="storePassword"
                        placeholder="Enter store password"
                        required
                      />
                      <button
                        class="btn btn-outline-secondary"
                        type="button"
                        id="togglePassword"
                        aria-label="Toggle password visibility"
                      >
                        <i class="ri-eye-line" id="toggleIcon"></i>
                      </button>
                      <div class="invalid-feedback">Please enter the password.</div>
                    </div>
                  </div>

                  <div class="d-grid">
                    <button type="submit" class="btn btn-primary py-2">
                      <span
                        class="spinner-border spinner-border-sm d-none me-2"
                        id="submitSpinner"
                        role="status"
                        aria-hidden="true"></span>
                      Enter Store
                    </button>
                  </div>

                  <div class="alert alert-danger mt-3 d-none" id="passwordError">
                    Incorrect password. Please try again.
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</AuthenticationLayout>

<script>
  // Password toggle functionality
  document.addEventListener("DOMContentLoaded", () => {
    const passwordInput = document.getElementById("storePassword") as HTMLInputElement;
    const toggleButton = document.getElementById("togglePassword");
    const toggleIcon = document.getElementById("toggleIcon");
    const passwordForm = document.getElementById("passwordForm") as HTMLFormElement;
    const passwordError = document.getElementById("passwordError");
    const submitSpinner = document.getElementById("submitSpinner");

    if (
      !passwordInput ||
      !toggleButton ||
      !toggleIcon ||
      !passwordForm ||
      !passwordError ||
      !submitSpinner
    ) {
      console.error("One or more required elements not found");
      return;
    }

    // Toggle password visibility
    toggleButton.addEventListener("click", () => {
      const type = passwordInput.type === "password" ? "text" : "password";
      passwordInput.type = type;

      // Toggle icon
      if (type === "password") {
        toggleIcon.classList.remove("ri-eye-off-line");
        toggleIcon.classList.add("ri-eye-line");
      } else {
        toggleIcon.classList.remove("ri-eye-line");
        toggleIcon.classList.add("ri-eye-off-line");
      }
    });

    // Form validation and submission
    passwordForm.addEventListener("submit", (event) => {
      event.preventDefault();

      // Reset previous error state
      passwordError.classList.add("d-none");

      // Form validation
      if (!passwordForm.checkValidity()) {
        event.stopPropagation();
        passwordForm.classList.add("was-validated");
        return;
      }

      // Show loading spinner
      submitSpinner.classList.remove("d-none");

      // Simulate password check (replace with actual implementation)
      setTimeout(() => {
        const enteredPassword = passwordInput.value;
        const correctPassword = "demo123"; // In a real implementation, this would be checked securely on the server

        if (enteredPassword === correctPassword) {
          // Redirect to the protected content
          window.location.href = getPathPrefix("/dashboard");
        } else {
          // Show error message
          passwordError.classList.remove("d-none");
          submitSpinner.classList.add("d-none");
        }
      }, 1000);
    });
  });

  // Import the getPathPrefix function for client-side use
  function getPathPrefix(path: string): string {
    const isDev = import.meta.env.DEV;
    return isDev ? `${path}` : `/pages${path}`;
  }
</script>
